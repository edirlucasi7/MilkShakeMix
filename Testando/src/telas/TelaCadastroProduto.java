/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

/**
 *
 * @author caio
 */

import com.placeholder.PlaceHolder;
import java.sql.*;
import db.Conection.Conexao;
import java.awt.Color;
import java.awt.Component;
import java.text.DateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class TelaCadastroProduto extends javax.swing.JInternalFrame {

    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    Conexao con = new Conexao();
    
    DefaultTableModel modelo;
    PlaceHolder placeholder;
    
    /**
     * Creates new form TelaUsuario
     */
    public TelaCadastroProduto() {
        initComponents();
        txtProdPreco.setDocument(new SoNumeroEPontos());
        placeholder = new PlaceHolder(inputSearch, "Digite o nome do produto..");
       
        
        try {
            conexao = Conexao.conector();
        } catch (SQLException ex) {
            Logger.getLogger(TelaCadastroProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public void corLinha(Color color){
         tabela.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
                @Override
                public Component getTableCellRendererComponent(JTable jtable, Object o,
                        boolean isSelected, boolean hasFocus , int row, int column) {
                    Component comp =  super.getTableCellRendererComponent(jtable, o, isSelected, hasFocus, row, column); //To change body of generated methods, choose Tools | Templates.
                    
                    //Pintando linha                   
                    comp.setBackground(row == tabela.getRowCount() -1 ? color : null);
                    
                       return comp;
                    
                }
                     
                 });
    
    }
    
    
   
     
    public void RefreshTable(Color color){
        
        try {
            ((DefaultTableModel) tabela.getModel()).setNumRows(0);
            tabela.updateUI();
            conexao = Conexao.conector();
            ResultSet rs = con.ConsultarAllProduto();
            
            int id = 0;
             String _nome = null, _preco = null, _tamanho = null, _especial = null;
            
            while (rs.next()) {
                    id = rs.getInt("id");
                    _nome = rs.getString("nomeproduto");
                    _preco = rs.getString("preco");
                    _tamanho = rs.getString("tamanho");
                    _especial = rs.getString("especial");

                    modelo = (DefaultTableModel) tabela.getModel();
                    modelo.addRow(new Object[]{"" + id, _nome, _preco, _tamanho, _especial});

                }
            
            
            tabela.repaint();
            
            txtProdNome.setText("");
                    txtProdPreco.setText("");
                    tamanhoProd.setSelectedIndex(0);
                    especialSelect.setSelected(false);
                    
            
                 int ultimaLinha = tabela.getModel().getRowCount() -1;
                 
                 corLinha(color);
                 
                 tabela.scrollRectToVisible(tabela.getCellRect(ultimaLinha, 0, false));
                 
                  
            
        } catch (SQLException ex) {
            Logger.getLogger(TelaCadastroProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        inputSearch = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtProdNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtProdPreco = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tamanhoProd = new javax.swing.JComboBox<String>();
        especialSelect = new javax.swing.JCheckBox();
        btnUsuAdd = new javax.swing.JButton();
        btnUsuUpdate = new javax.swing.JButton();
        btnUsuDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setPreferredSize(new java.awt.Dimension(691, 524));

        jPanel1.setBackground(new java.awt.Color(27, 247, 247));
        jPanel1.setPreferredSize(new java.awt.Dimension(691, 555));

        jLabel1.setFont(new java.awt.Font("Fira Code", 1, 28)); // NOI18N
        jLabel1.setText("Cadastro de Produto");

        jPanel2.setPreferredSize(new java.awt.Dimension(680, 450));

        inputSearch.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        inputSearch.setPreferredSize(new java.awt.Dimension(98, 38));
        inputSearch.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                inputSearchAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        inputSearch.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                inputSearchInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        inputSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputSearchKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputSearchKeyReleased(evt);
            }
        });

        jLabel7.setText("(*)Campos obrigatórios");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Produto", "Preço", "Tamanho", "Especial"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        jLabel2.setFont(new java.awt.Font("Fira Code Light", 1, 14)); // NOI18N
        jLabel2.setText("*Nome");

        txtProdNome.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N
        txtProdNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProdNomeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Fira Code Light", 1, 14)); // NOI18N
        jLabel3.setText("*Preço");

        txtProdPreco.setFont(new java.awt.Font("Fira Code", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Fira Code Light", 1, 14)); // NOI18N
        jLabel4.setText("*Tamanho");

        tamanhoProd.setFont(new java.awt.Font("Fira Code", 0, 13)); // NOI18N
        tamanhoProd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Unico", "P", "M", "G" }));
        tamanhoProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tamanhoProdActionPerformed(evt);
            }
        });

        especialSelect.setText("Especial");
        especialSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                especialSelectActionPerformed(evt);
            }
        });

        btnUsuAdd.setBackground(new java.awt.Color(27, 50, 247));
        btnUsuAdd.setFont(new java.awt.Font("Fira Code Light", 1, 12)); // NOI18N
        btnUsuAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/iconfinder_dashboard__Add_2877013.png"))); // NOI18N
        btnUsuAdd.setText("Cadastrar");
        btnUsuAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuAddActionPerformed(evt);
            }
        });

        btnUsuUpdate.setBackground(new java.awt.Color(124, 38, 253));
        btnUsuUpdate.setFont(new java.awt.Font("Fira Code Light", 1, 12)); // NOI18N
        btnUsuUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/iconfinder_update_172618.png"))); // NOI18N
        btnUsuUpdate.setText("Atualizar");
        btnUsuUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuUpdateActionPerformed(evt);
            }
        });

        btnUsuDelete.setBackground(new java.awt.Color(249, 26, 2));
        btnUsuDelete.setFont(new java.awt.Font("Fira Code Light", 1, 12)); // NOI18N
        btnUsuDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/iconfinder_Streamline-70_185090 (1).png"))); // NOI18N
        btnUsuDelete.setText("Deletar");
        btnUsuDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsuDeleteActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/iconfinder_search_172546.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(tamanhoProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(especialSelect)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(inputSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel7))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(235, 235, 235)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(txtProdPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(12, 12, 12)
                                            .addComponent(btnUsuAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(43, 43, 43)
                                            .addComponent(btnUsuUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnUsuDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtProdNome, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 3, Short.MAX_VALUE)))))
                .addGap(50, 50, 50))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(53, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProdPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProdNome, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tamanhoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(especialSelect))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUsuAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUsuUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUsuDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(0, 0, 716, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void txtProdNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProdNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProdNomeActionPerformed

    private void tamanhoProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tamanhoProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tamanhoProdActionPerformed

    private void especialSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_especialSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_especialSelectActionPerformed

    private void btnUsuAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuAddActionPerformed

          
        
        
            String nome_produto = txtProdNome.getText();
            String preco = txtProdPreco.getText();
            String tamanho = (String) tamanhoProd.getSelectedItem();
            boolean selecao = especialSelect.isSelected();
            String especial;
            
            
            if(nome_produto.equals("") || preco.equals("") || !tamanho.equals("P") 
                    && !tamanho.equals("M") && !tamanho.equals("G") && !tamanho.equals("Unico")){
               JOptionPane.showMessageDialog(null, "Preencha todos os dados", "", JOptionPane.ERROR_MESSAGE);
               
            }else{
                
                try {
                    if(selecao == true){
                        especial = "ESPECIAL";
                    }else{
                        especial = "";
                    }
                    
                    boolean existeProduto = con.ConsultarProdutoCad(nome_produto, preco, tamanho, especial);
                    
                    if(existeProduto){
                        JOptionPane.showMessageDialog(null, "Este produto já existe", "Informação", JOptionPane.ERROR_MESSAGE);
                    }else{
                        boolean cadastroProduto = con.cadastrarProduto(nome_produto, preco, tamanho, especial);
                        
                        if(cadastroProduto == true){
                            JOptionPane.showMessageDialog(null, "Produto cadastrado com sucesso", "", JOptionPane.INFORMATION_MESSAGE);
                            RefreshTable(Color.YELLOW);
                            txtProdNome.setText("");
                            txtProdPreco.setText("");
                            tamanhoProd.setSelectedIndex(0);
                            especialSelect.setSelected(false);
                            
                            
                        }else{
                            JOptionPane.showMessageDialog(null, "Erro ao cadastrar esse produto!", "", JOptionPane.ERROR_MESSAGE);
                        } 
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(TelaCadastroProduto.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            }
                 
            
    }//GEN-LAST:event_btnUsuAddActionPerformed

    private void btnUsuUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuUpdateActionPerformed

       int index = tabela.getSelectedRow();
        
        if(index < 0){
            JOptionPane.showMessageDialog(null, "Você precisa selecionar algum produto na tabela", "", JOptionPane.ERROR_MESSAGE);
        }else{
            
            String newNomeProduto = txtProdNome.getText();
        String newPrecoProduto = txtProdPreco.getText();
        String newTamanho = (String) tamanhoProd.getSelectedItem();
        boolean selecao = especialSelect.isSelected();
        String newEspecial;

        
            if(newNomeProduto.equals("") || newPrecoProduto.equals("") || !newTamanho.equals("P") 
                    && !newTamanho.equals("M") && !newTamanho.equals("G") && !newTamanho.equals("Unico")){
               JOptionPane.showMessageDialog(null, "Preencha todos os dados", "", JOptionPane.ERROR_MESSAGE);
               
            }else{
                
                if(selecao == true){
                    newEspecial = "ESPECIAL";
                }else{
                    newEspecial = "";
                }
        
        String id = tabela.getValueAt((tabela.getSelectedRow()), 0).toString();
                
        boolean alterarInformacoesProduto = con.AlterarProduto(newNomeProduto, newPrecoProduto, newTamanho, newEspecial, id);
        
            if(alterarInformacoesProduto == true){
                    JOptionPane.showMessageDialog(null,"Produto atualizado com sucesso", "", JOptionPane.INFORMATION_MESSAGE);
                    txtProdNome.setText("");
                    txtProdPreco.setText("");
                    tamanhoProd.setSelectedIndex(0);
                    especialSelect.setSelected(false);
                    btnUsuAdd.setEnabled(true);
                    
                    RefreshTable(Color.WHITE);
            }else{
                JOptionPane.showMessageDialog(null,"Erro ao atualizar informações do produto", "", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
            }
        
    }//GEN-LAST:event_btnUsuUpdateActionPerformed

    private void btnUsuDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsuDeleteActionPerformed

        int index = tabela.getSelectedRow();
        
        if(index < 0){
           JOptionPane.showMessageDialog(null, "Você precisa selecionar algum produto na tabela para deletar", "", JOptionPane.ERROR_MESSAGE);
           RefreshTable(Color.YELLOW);
        }else{
            
           
         int confirma = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir este produto?",
                 "Atenção", JOptionPane.YES_NO_OPTION);
         
                   
        if(confirma == JOptionPane.YES_OPTION){
            try {
            String id = tabela.getValueAt((tabela.getSelectedRow()), 0).toString();
            
            
            boolean apagarProduto = con.deletarprodutos(id);
            
            if(apagarProduto == true){
                btnUsuAdd.setEnabled(true);
                JOptionPane.showMessageDialog(null, "Produto apagado com sucesso", "", JOptionPane.INFORMATION_MESSAGE);
                int i = tabela.getSelectedRow();
                modelo.removeRow(i);
                txtProdNome.setText("");
                tamanhoProd.setSelectedIndex(0);
                txtProdPreco.setText("");
                especialSelect.setSelected(false);
            }else{
                JOptionPane.showMessageDialog(null, "Erro ao apagar produto", "", JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(TelaCadastroProduto.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
           
        }

    }//GEN-LAST:event_btnUsuDeleteActionPerformed

    private void inputSearchAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_inputSearchAncestorAdded

    }//GEN-LAST:event_inputSearchAncestorAdded

    private void inputSearchInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_inputSearchInputMethodTextChanged

    }//GEN-LAST:event_inputSearchInputMethodTextChanged

    private void inputSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputSearchKeyPressed

    }//GEN-LAST:event_inputSearchKeyPressed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked

        
        
        txtProdNome.setText(tabela.getValueAt((tabela.getSelectedRow()), 1).toString());
        txtProdPreco.setText(tabela.getValueAt((tabela.getSelectedRow()), 2).toString());
       
        String tamanho = tabela.getValueAt((tabela.getSelectedRow()),3).toString();
        tamanhoProd.setSelectedItem(tamanho);
        
        String especial = tabela.getValueAt((tabela.getSelectedRow()), 4).toString();
        
        if(especial.equals("ESPECIAL")){
            especialSelect.setSelected(true);
        }else{
            especialSelect.setSelected(false);
        }
        
         btnUsuAdd.setEnabled(false);
        JOptionPane.showMessageDialog(null, "Os dados do produto estão no formulário",
          "Atenção", JOptionPane.INFORMATION_MESSAGE);
        
        corLinha(Color.WHITE);
        
    }//GEN-LAST:event_tabelaMouseClicked

    private void inputSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputSearchKeyReleased
        
    }//GEN-LAST:event_inputSearchKeyReleased

    private void inputSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputSearchKeyTyped

        
        try {
            ((DefaultTableModel) tabela.getModel()).setNumRows(0);
            tabela.updateUI();
            conexao = Conexao.conector();
            ResultSet rs = con.ConsultarProduto(inputSearch.getText());
             int id = 0;
             String _nome = null, _preco = null, _tamanho = null, _especial = null;
             
             while (rs.next()) {
                    id = rs.getInt("id");
                    _nome = rs.getString("nomeproduto");
                    _preco = rs.getString("preco");
                    _tamanho = rs.getString("tamanho");
                    _especial = rs.getString("especial");

                    modelo = (DefaultTableModel) tabela.getModel();
                    modelo.addRow(new Object[]{"" + id, _nome, _preco, _tamanho, _especial});

                }
            
        } catch (SQLException ex) {
            Logger.getLogger(TelaCadastroProduto.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_inputSearchKeyTyped

    private void tabelaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaKeyPressed
   
        

    }//GEN-LAST:event_tabelaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUsuAdd;
    private javax.swing.JButton btnUsuDelete;
    private javax.swing.JButton btnUsuUpdate;
    private javax.swing.JCheckBox especialSelect;
    private javax.swing.JTextField inputSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    private javax.swing.JComboBox<String> tamanhoProd;
    private javax.swing.JTextField txtProdNome;
    private javax.swing.JTextField txtProdPreco;
    // End of variables declaration//GEN-END:variables
}
